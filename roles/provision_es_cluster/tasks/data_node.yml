---
  - name: Create ES Data Node instances
    ec2:
      key_name: "{{ aws_key_name }}"
      instance_type: "{{ aws_instance_type }}"
      image: "{{ aws_ami }}"
      wait: yes
      wait_timeout: 500
      count: "{{ data_instance_count }}"
      volumes:
        - device_name: /dev/sdf
          volume_type: gp2
          volume_size: "{{ vol_size_sdf }}"
        - device_name: /dev/sdg
          volume_type: gp2
          volume_size: "{{ vol_size_sdg }}"
        - device_name: /dev/sdh
          volume_type: gp2
          volume_size: "{{ vol_size_sdh }}"
      instance_tags:
        Name: "{{ data_tag_name }}"
      vpc_subnet_id: "{{ subnet_id }}"
      region: "{{ aws_region }}"
      group: "{{ aws_sec_group_name }}"
    register: ec2_details

  - name: Generate Sequence ID for tagging
    debug: msg="{{ item }}"
    with_sequence: start="{{ startindex }}" end="{{ data_instance_count }}" format=%02d
    register: sequence

  - name: Tag Created instance as Data
    ec2_tag:
      region: "{{ aws_region }}"
      resource: "{{ item.0.id }}"
      tags:
        Name: "{{ data_tag_name }}-{{ item.1.msg }}"
    with_together:
      - "{{ ec2_details.instances }}"
      - "{{ sequence.results }}"


  - name: Add Instances to local inventory file
    local_action:
      lineinfile path="~/ansible-environments/hosts"
        insertafter="\[esdata\]"
        line="{{ item.private_ip }}"
        state="present"
    with_items: "{{ ec2_details.instances }}"

  - name: Show the registered variable
    debug:
      var: ec2_details

  - name: Create a Classic Load balancer for data nodes
    local_action:
      module: ec2_elb_lb
      name: "data-nodes-elasticsearch"
      state: present
      region: "{{ aws_region }}"
      subnets:
        - subnet-9c3e38f8
        - subnet-a1654ed7
      listeners:
        - protocol: http
          load_balancer_port: 9200
          instance_port: 9200
    register: data_elb

  - name: Add the data instance behind the newly created load-balancer
    local_action:
      module: ec2_elb
      ec2_elbs: "data-nodes-elasticsearch"
      instance_id: "{{ item }}"
      region: "{{ aws_region }}"
      state: present
    with_items: "{{ ec2_details.instance_ids }}"
    ### IGNORE_ERROR ###
