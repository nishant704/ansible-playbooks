---

  - name: Generate Sequence ID for hostnames
    when: inventory_hostname in groups['esdata']
    #debug: msg="{{ item }}"
    #with_sequence: start="{{ startindex }}" end="{{ client_instance_count }}" format=%02d
    set_fact:
      indexed_hostname_data: "{{ 'mayassar-data{0:02d}'.format(play_hosts.index(inventory_hostname)+1)}}"

  - name: show the hostnames
    when: inventory_hostname in groups['esdata']
    debug:
      msg: "{{ hostvars[item].indexed_hostname_data }}"
    with_items: "{{ groups['esdata'] }}"
    register: names

  - name: Configure Hostname for Client Node
    when: inventory_hostname in groups['esdata']
    hostname:
      name: "{{ indexed_hostname_data }}"
    with_items:
      - "{{ groups['esdata'] }}"

  - name: Configure the Dedicated ES DATA node
    when: inventory_hostname in groups['esdata']
    lineinfile:
      path: /etc/elasticsearch/elasticsearch.yml
      insertafter: EOF
      line: "{{ item }}"
    with_items:
      - 'node.master: false'
      - 'node.data: true'
      - 'node.ingest: false'
      - '######################'
      - 'path.data: "{{ es_data_path }}"'
      - 'path.logs: "{{ es_log_path  }}"'



  - name: Configure the data node's LVM Directory
    file:
      path: /elasticsearch
      owner: elasticsearch
      group: elasticsearch
      recurse: yes

  - name: Re-Start Elasticsearch
    when: inventory_hostname in groups['esdata']
    service:
      name: elasticsearch
      state: restarted

  - name: Wait 10 sec to check if 9200 is alive
    when: inventory_hostname in groups['esdata']
    wait_for:
      host: "{{ inventory_hostname }}"
      port: 9200
      delay: 10
      timeout: 100
    ignore_errors: no


  - name: Check if ES is running or FAIL here
    when: inventory_hostname in groups['esdata']
    command: 'curl http://"{{ inventory_hostname }}":9200'
    register: curl_result
    failed_when: "'Failed' in curl_result.stderr"
